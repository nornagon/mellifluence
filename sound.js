// Generated by CoffeeScript 1.4.0
(function() {
  var context, load, onError, play, sounds;

  try {
    context = new webkitAudioContext;
  } catch (e) {
    console.warn('WebKit audio not supported in this browser');
  }

  sounds = {};

  onError = function(e) {
    return console.error(e);
  };

  load = function(url, cb) {
    var request;
    request = new XMLHttpRequest();
    request.open('GET', url, true);
    request.responseType = 'arraybuffer';
    request.onload = function() {
      return context.decodeAudioData(request.response, function(buf) {
        sounds[url] = buf;
        return cb(buf);
      }, onError);
    };
    return request.send();
  };

  play = function(url, opts) {
    var buf, delay, gain, gainNode, source, _ref, _ref1;
    if (!(buf = sounds[url])) {
      console.warn("tried to play sound " + url + " without loading it");
    }
    source = context.createBufferSource();
    source.buffer = sounds[url];
    gain = (_ref = opts != null ? opts.gain : void 0) != null ? _ref : 1;
    delay = (_ref1 = opts != null ? opts.delay : void 0) != null ? _ref1 : 0;
    if (gain !== 1) {
      gainNode = context.createGainNode();
      source.connect(gainNode);
      gainNode.connect(context.destination);
      gainNode.gain.value = gain;
    } else {
      source.connect(context.destination);
    }
    return source.noteOn(delay);
  };

  window.sound = {
    load: load,
    play: play
  };

}).call(this);
